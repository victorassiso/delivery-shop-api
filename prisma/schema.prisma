generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

enum Role {
  user
  admin
}

model User {
  id           String @id @default(uuid())
  name         String
  email        String @unique
  passwordHash String
  role         Role?

  workspace   Workspace? @relation(fields: [workspaceId], references: [id])
  workspaceId String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Workspace {
  id   String @id @default(uuid())
  name String
  code String @unique

  users    User[]
  products Product[]

  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  orders     Order[]
  orderItems OrderItem[]
  customers  Customer[]

  @@map("workspaces")
}

model Product {
  id          String  @id @default(uuid())
  name        String
  description String?
  category    String
  price       Float

  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  workspaceId String

  orderItems OrderItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("products")
}

model Order {
  id     String      @id @default(uuid())
  total  Float
  status OrderStatus @default(pending)

  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  workspaceId String

  customer   Customer @relation(fields: [customerId], references: [id])
  customerId String

  orderItems OrderItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("orders")
}

enum OrderStatus {
  pending
  canceled
  processing
  delivering
  delivered
}

model OrderItem {
  id String @id @default(uuid())

  price    Float
  quantity Int

  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  workspaceId String

  product   Product @relation(fields: [productId], references: [id])
  productId String

  order   Order  @relation(fields: [orderId], references: [id])
  orderId String

  createdAt DateTime @default(now())

  @@map("orderItems")
}

model Customer {
  id      String @id @default(uuid())
  name    String
  email   String
  phone   String
  address String

  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  workspaceId String

  orders Order[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("customers")
}
